
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.DefaultParser;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.ParseException;

public class Main {

	protected Map features = new HashMap();
	protected Options options = new Options();

	public void verifyFeatures() {
		System.out.println("M::verifyFeatures");
	}

	public Options createOptions() {
		System.out.println("M::createOptions");
		
		// options.addOption(cmd, hasArgs, decription);

		options.addOption(ActionOption.builder("exit").desc("Exit the program.").build());
		
		return options;
	}

	public boolean verifyOption(CommandLine line) throws ParseException {
		System.out.println("M::verifyOption");
		
		if (line == null) {
			return true;
		} else if (line.hasOption("exit")) {
			return false;
		}
		
		return true;
	}

	public void go() {
		System.out.println("M::go");
		
		boolean goAhead = true;

		verifyFeatures();
		options = createOptions();

		CommandLineParser parser = new DefaultParser();
		Scanner scanner = new Scanner(System.in);
		
		while (goAhead) {
			try {
				System.out.print(">> ");
				String cmds = scanner.nextLine();
				System.out.println("Commands: " + cmds);

				if (cmds.isEmpty())
					continue;

				cmds = "-".concat(cmds);
				goAhead = verifyOption(parser.parse(options, cmds.split(" ")));
			} catch (ParseException exception) {
				System.out.println();
				System.out.println("<feature> <action>");
				// for (Option option : options.getOptions()) {
				for (Iterator it = options.getOptions().iterator(); it.hasNext();) {
					Option option = (Option) it.next();
					System.out.print("    " + option.getOpt());
					if (option instanceof ActionOption) {
						Object actions[] = ((ActionOption) option).getActionArray();
						if (actions.length > 0)
							System.out.print("\t" + actions[0]);
						for (int i = 1; i < actions.length; i++)
							System.out.print("|" + actions[i]);
					}
					System.out.println("\t" + option.getDescription());
				}
				System.out.println();
			}
		}

		System.out.println("Good bye!!");
	}

	public static void main(String[] args) {
		new Main().go();
	}

}
